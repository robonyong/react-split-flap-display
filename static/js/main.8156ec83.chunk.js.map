{"version":3,"sources":["ReactSplitFlapDisplay/index.js","CodeBlock.tsx","Swatch.tsx","Wrapper.tsx","constants.ts","App.tsx","index.tsx"],"names":["exports","ALPHA","NUMERIC","PUNCTUATION","Text","styled","div","position","color","TextComponent","children","React","HalfPanel","Panel","textColor","value","React__default","createElement","FlipIn","keyframes","FlipOut","HalfFlipPanel","direction","duration","FlipPanel","background","commonjsGlobal","globalThis","window","global","self","howler","HowlerGlobal","this","init","prototype","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","apply","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Character","characterWidth","borderWidth","CharacterComponent","prevValue","step","withSound","delay","Wrapper","fontSize","borderColor","defaultProps","characterSet","minLength","padDirection","escapeValue","map","char","includes","join","getMinLengthFill","currValue","fill","SplitFlapDisplay","prevChars","currChars","initialValue","useState","setPrevValue","setCurrValue","shadowPrevValue","useRef","shadowCurrValue","updateTimer","updateValue","escapedFinalValue","current","nextValue","idx","currChar","charIdx","useEffect","v","CodeBlock","Swatch","onChange","showColorPicker","setShowColorPicker","className","onClick","style","defaultInputs","numeric","alpha","alphanumeric","punctuation","typeToCharSetArray","typeToCharSet","App","exampleSet","setExampleSet","setBackground","setBorderColor","setBorderWidth","setCharacterWidth","setFontSize","setMinLength","setPadDirection","setValue","setTextColor","setStep","setWithSound","withCustomSound","setWithCustomSound","generateInputHandler","setFn","target","generateColorInputHandler","hex","onWithSoundToggle","selectedExample","newValue","checked","JSON","stringify","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8156ec83.chunk.js","sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) 2020 Robin Yang\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* eslint-disable */\nimport * as React from 'react';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst ALPHA = [\r\n    ' ',\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F',\r\n    'G',\r\n    'H',\r\n    'I',\r\n    'J',\r\n    'K',\r\n    'L',\r\n    'M',\r\n    'N',\r\n    'O',\r\n    'P',\r\n    'Q',\r\n    'R',\r\n    'S',\r\n    'T',\r\n    'U',\r\n    'V',\r\n    'W',\r\n    'X',\r\n    'Y',\r\n    'Z',\r\n];\r\nconst NUMERIC = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\nconst PUNCTUATION = [\r\n    '!',\r\n    '@',\r\n    '#',\r\n    '$',\r\n    '(',\r\n    ')',\r\n    '^',\r\n    '-',\r\n    '_',\r\n    '+',\r\n    '&',\r\n    '=',\r\n    ';',\r\n    ':',\r\n    '*',\r\n    \"'\",\r\n    '\"',\r\n    ',',\r\n    '.',\r\n    '<',\r\n    '>',\r\n    '/',\r\n    '\\\\',\r\n    '?',\r\n    '°',\r\n    '%',\r\n];\n\nconst Text = styled.div `\n  background: ${({ position, color }) => position === 'top'\r\n    ? `linear-gradient(${color} 50%, transparent 50%)`\r\n    : `linear-gradient(transparent 50%, ${color} 50%)`};\n  background-clip: text;\n  -webkit-background-clip: text;\n  text-fill-color: transparent;\n  -webkit-text-fill-color: transparent;\n`;\r\nconst TextComponent = ({ children, color, position }) => (React.createElement(Text, { position: position, color: color }, children));\n\nconst HalfPanel = styled.div `\n  position: ${({ position }) => (position === 'top' ? 'relative' : 'absolute')};\n  overflow: hidden;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\r\nconst Panel = ({ position, textColor, value }) => (React__default.createElement(HalfPanel, { position: position },\r\n    React__default.createElement(TextComponent, { position: position, color: textColor }, value)));\r\nconst FlipIn = keyframes `\n  0% {\n    transform: rotateX(-90deg);\n  }\n  50% {\n    transform: rotateX(-90deg);\n  }\n  100% {\n    transform: rotateX(0deg);\n  }\n`;\r\nconst FlipOut = keyframes `\n  0% {\n    transform: rotateX(0deg);\n  }\n  50% {\n    transform: rotateX(90deg);\n  }\n  100% {\n    transform: rotateX(90deg);\n  }\n`;\r\nconst HalfFlipPanel = styled(HalfPanel) `\n  position: absolute;\n  animation: ${({ direction }) => (direction === 'in' ? FlipIn : FlipOut)} linear\n    ${({ duration }) => `${duration}s`};\n  animation-fill-mode: forwards;\n  background: ${({ color, direction }) => direction === 'out'\r\n    ? `linear-gradient(${color} 50%, transparent 50%)`\r\n    : `linear-gradient(transparent 50%, ${color} 50%)`};\n  opacity: 1;\n  z-index: 2;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\r\nconst FlipPanel = ({ background, direction, duration, position, textColor, value, }) => (React__default.createElement(HalfFlipPanel, { direction: direction, duration: duration, color: background, position: position },\r\n    React__default.createElement(TextComponent, { position: position, color: textColor }, value)));\n\nvar defaultSound = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAEAAAKMABhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWGenp6enp6enp6enp6enp6enp6enp6enp6e5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5/////////////////////////////////8AAABQTEFNRTMuMTAwBLkAAAAAAAAAABUgJAR5QQAB4AAACjA//MFGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//vQxAAAB2gDW/QQACP1sqt/N5BAZmhFRWMCY2lLgQfNtBCD59YPn7QQ4OAg7ygYxO+CDsuf/g4CDpQH3//KHPiBxQEFAhrB8HwcOf/v/wfp4hol0d0dkUhwOaxFj7ncBpaDg480LAQiYIbAwDY6OgIkLiokrIYSAGAAC7kxjC1u4ggHgYHGdh8dSuUrChyqMpptgKQGqwY7LR39fmC3cUXZ6kwwJx4Hhl2qdtoy/rDGJp7QC1yVsSh5lcD01eOuzagqmV6wN45QlesFR5U0PQ1GqaItpJZ2r11KBuEP4SWrQyqvOc7hGsJ6W0delrVXfgeXKieCERaVRa3XnpVf3aw+xO35qtGbVJK4Nyg6izk9qJTkIn91atXLfd1qta/jhVlm5uxhYp+5Zc1VnKSdvyuH85Hf5qiqZ6u2qXKrUlWWW8quCv/+8LAMx/9QskR6akXFN0NgBBKjEZHYpXgQ6DBRUAZJBgafp0VlrB5VTEBFBVAtUEBK2lqxJ0oRCgkclMHsbrAbdm8WEYBL3CVy12RvDNyB6brsunfaZCJPUlsGsJiMmR0lyEkmQ7y6XOir0RVtqkYqR+dl9SO00atS+nlTsXLEflruxmzfltyOZ08rsTj/v3DUhlkbl8SiVeSyqexnJ6U4VZ2pK8IZv/lu7Lbs/Yr2atnWrHa1WtS/3PVexyfimu83LLFfOX38cqSN2rV6njHPs1bvLd+rSUkbtX72e+97fsTmdjC7T9s5Z6sRS/YF//8qQdZf/oGpmmrN3Ih0dUQi1lLqdTqlMAJhvTeJRUAbZEtVU4csM+CJhpoSZtmINgmLCgEMYwGMARo0BnzEqLKsDTkaACqAF5Aqmpc173fHRHLLjnAgW1Ns9nMAKmSWh1OpYWPnYGLFCxAu2hQhi+rA2Z7ZaxJMmHnRXYtIwhGQmcM5k9jHnG3eZy0T5bQy8xCB7YxjlNRJEwwWDRqIy2JPtALkyl/qSHqOU32nJiOpEVtBACumCrXxu1LtLWoXdcGQ4y2IU782H2jThw06ZECYIbhJNFpG8VIwSVWsdRF/ath9r1ymsRK1I6K5STFNA0TTxLZtDe5ExkhcBYoODRxLjvPBrb7rdq7rQ1Wps//7oMT6gB3hlV/5nBIE2jws/zWQCK2dL9Waz+mx5KZVa7SS7K5nSSe9G4i/col17Ovlz/////////+lx/fZmlxANn9ksOplm6iWNmeVRSRoZJFNyKR0061cRi0xCBN7xGS4eHDt5z0xm0hUHgUSYsSZcYnGZJE2QGgjPhUjjomBEGBIMwQMyQcwZARCyQCAmIsCdx/y7qlbbsrUqMgILSOLF1tM4ZYw9hq67rB8CESVQC41nNGcF+Y++1qUOfL1OKGPQGtURBEv1FFhYejTLnSuS7sQiLryOrWX+uN6YCXM0CAGUw1UlzuwFNRbO5Sv9E4NlWcqpYXbfiBmz2Hfjzf1bM5BMZnYjjVwitLI5F2nyiMjpLtO8kiiUZpoIdPk1IrWsqaVRbOtJ3vmpy9Xxs0eW+Y28FoLcRLY5KezLI3gm6WteuW3qaVTu7QUrswTHaSthEu3t/++//5/////////////vetc19WpfCn+1Sd5tHhSRigxRylYKV1KuYxEhgqBzGQbLlHIhICjsIhKYOCRggjmADAYhSgqGA4CCAEmEQyY4GpjUUmHg+zMwhYkhqZApdYRBGaMNVqHPaxUFWg6oDBrfGiFAEArvNu2dPFNVB1BKZCKeJfgCELUd1wF0r8CB0HRKMRAhQpS+TNhhlfDSngkcCuiy9fsDP0y4CpCsxrll1kxH1jUnv/7sMTiACTx5Vn5rQAE0bMpPzmQAAqOO7OvhGn5aTG3HgFfLTGIyp2H5UEf6TtOWETXWFmn2dqTz8+/kMvj2tUUWVM/rIX8UOWNBjL6/c7v26KCvwgmzqXUnaKXxGPQTKH9fp7IZmmsQc5sNsscR9aOQRiOfZ+UxG1TVquT3u9G6KVSykikhh67MW6S+wFpD7QK/FDFKKUNdeOngmijph61FGf5hL2mSr/5HPuXdm3JmYVWHW3X2RAkBZYs0gCXUcwLWgtAUsMqZYzXn+f5rS7gWiocgCg1AVBaDUVFhZmZihYWFa1VVVTpJFRUVFRU1rVVr4VaKKFhZmVa2KFhYWWoZmZr9mZhYWFhVVVVX///9VX+V/1r2//Zhb4ZmZmX2ZmZl/4ZmFXYNHfEoKgqCoNA1BUFlUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//tQxOKD0OlZR/2EAAAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar howler = {};\n\n/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function (exports) {\n(function() {\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for CommonJS libraries such as browserify.\n  {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof commonjsGlobal !== 'undefined') {\n    commonjsGlobal.HowlerGlobal = HowlerGlobal;\n    commonjsGlobal.Howler = Howler;\n    commonjsGlobal.Howl = Howl;\n    commonjsGlobal.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n}(howler));\n\nconst Character = styled.div `\n  background: ${({ background }) => background};\n  display: flex;\n  justify-content: center;\n  width: ${({ characterWidth }) => characterWidth || 'initial'};\n  padding: 0.5em;\n  position: relative;\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50%;\n    z-index: 5;\n    background: transparent;\n    border-bottom: ${({ background, borderWidth }) => `${background} ${borderWidth} solid`};\n  }\n`;\r\nconst CharacterComponent = ({ background, borderWidth, characterWidth, prevValue, step, textColor, value, withSound, }) => {\r\n    const sound = React.useMemo(() => {\r\n        if (sound) {\r\n            sound.unload();\r\n        }\r\n        if (!withSound) {\r\n            return null;\r\n        }\r\n        const newSound = new howler.Howl({\r\n            src: [withSound === true ? defaultSound : withSound],\r\n            onloaderror: (_id, error) => {\r\n                console.error('failed to load sound', error);\r\n            },\r\n            onplayerror: (_id, error) => {\r\n                console.warn('failed to play sound', error);\r\n            },\r\n        });\r\n        return newSound;\r\n    }, [withSound]);\r\n    React.useEffect(() => {\r\n        if (prevValue !== value && (sound === null || sound === void 0 ? void 0 : sound.state()) === 'loaded') {\r\n            // play if the sound will complete within a step\r\n            if (Math.round(sound.duration() * 1000) <= step) {\r\n                const delay = Math.round((step - sound.duration() * 1000) / 2);\r\n                setTimeout(() => {\r\n                    if (sound) {\r\n                        sound.play();\r\n                    }\r\n                }, delay);\r\n            }\r\n        }\r\n    }, [prevValue, value, sound, step]);\r\n    React.useEffect(() => {\r\n        return () => {\r\n            if (sound) {\r\n                sound.unload();\r\n            }\r\n        };\r\n    }, []);\r\n    return (React.createElement(Character, { background: background, borderWidth: borderWidth, characterWidth: characterWidth },\r\n        React.createElement(Panel, { position: \"top\", background: background, textColor: textColor, value: value }),\r\n        React.createElement(Panel, { position: \"bottom\", background: background, textColor: textColor, value: prevValue }),\r\n        prevValue !== value && (React.createElement(FlipPanel, { direction: \"out\", duration: step / 1000, position: \"top\", background: background, textColor: textColor, value: prevValue })),\r\n        prevValue !== value && (React.createElement(FlipPanel, { direction: \"in\", duration: step / 1000, position: \"bottom\", background: background, textColor: textColor, value: value }))));\r\n};\n\nconst Wrapper = styled.div `\n  display: flex;\n  color: ${({ color }) => color};\n  font-size: ${({ fontSize }) => fontSize};\n  > * {\n    &:not(:first-child) {\n      border-left: ${({ borderColor, borderWidth }) => `${borderColor} ${borderWidth} solid`};\n    }\n  }\n  box-sizing: border-box;\n`;\r\nconst defaultProps = {\r\n    background: '#000000',\r\n    borderColor: '#dddddd',\r\n    borderWidth: '1px',\r\n    characterSet: NUMERIC,\r\n    characterWidth: '1em',\r\n    fontSize: '1em',\r\n    minLength: 5,\r\n    padDirection: 'left',\r\n    step: 200,\r\n    textColor: '#dddddd',\r\n    value: '94609',\r\n};\r\nconst escapeValue = (value, characterSet) => value\r\n    .split('')\r\n    .map((char) => (characterSet.includes(char) ? char : characterSet[0]))\r\n    .join('');\r\nconst getMinLengthFill = (currValue, characterSet, minLength) => {\r\n    if (minLength && currValue.length < minLength) {\r\n        return Array(minLength - currValue.length).fill(characterSet[0]);\r\n    }\r\n    return [];\r\n};\r\nconst SplitFlapDisplay = ({ background = defaultProps.background, borderColor = defaultProps.borderColor, borderWidth = defaultProps.borderWidth, characterSet = defaultProps.characterSet, characterWidth = defaultProps.characterWidth, fontSize = defaultProps.fontSize, minLength = defaultProps.minLength, padDirection = defaultProps.padDirection, step = defaultProps.step, textColor = defaultProps.textColor, value = defaultProps.value, withSound, } = defaultProps) => {\r\n    const initialValue = Array(value.length).fill(characterSet[0]).join('');\r\n    const [prevValue, setPrevValue] = useState(initialValue);\r\n    const [currValue, setCurrValue] = useState(initialValue);\r\n    // persisted vars that inform state\r\n    const shadowPrevValue = useRef(initialValue);\r\n    const shadowCurrValue = useRef(initialValue);\r\n    const updateTimer = useRef(null);\r\n    const updateValue = () => {\r\n        const escapedFinalValue = escapeValue(value, characterSet);\r\n        if (updateTimer.current || shadowPrevValue.current === escapedFinalValue) {\r\n            return;\r\n        }\r\n        shadowPrevValue.current = shadowCurrValue.current;\r\n        setPrevValue(shadowPrevValue.current);\r\n        const currChars = shadowCurrValue.current.split('');\r\n        const finalChars = escapedFinalValue.split('');\r\n        const nextValue = finalChars\r\n            .map((char, idx) => {\r\n            const currChar = currChars[idx];\r\n            const charIdx = characterSet.indexOf(currChar);\r\n            const nextChar = currChar === char || (charIdx === 0 && !characterSet.includes(char))\r\n                ? currChar\r\n                : characterSet[(charIdx + 1) % characterSet.length];\r\n            return nextChar;\r\n        })\r\n            .join('');\r\n        shadowCurrValue.current = nextValue;\r\n        setCurrValue(shadowCurrValue.current);\r\n        updateTimer.current = setTimeout(() => {\r\n            updateTimer.current = null;\r\n            updateValue();\r\n        }, step);\r\n    };\r\n    useEffect(updateValue, []);\r\n    useEffect(() => {\r\n        if (updateTimer.current) {\r\n            clearTimeout(updateTimer.current);\r\n            updateTimer.current = null;\r\n        }\r\n        updateValue();\r\n    }, [value, characterSet, step]);\r\n    let prevChars;\r\n    let currChars;\r\n    if (padDirection === 'right') {\r\n        prevChars = [...prevValue.split(''), ...getMinLengthFill(prevValue, characterSet, minLength)];\r\n        currChars = [...currValue.split(''), ...getMinLengthFill(currValue, characterSet, minLength)];\r\n    }\r\n    else {\r\n        prevChars = [...getMinLengthFill(prevValue, characterSet, minLength), ...prevValue.split('')];\r\n        currChars = [...getMinLengthFill(currValue, characterSet, minLength), ...currValue.split('')];\r\n    }\r\n    return (React__default.createElement(Wrapper, { borderColor: borderColor, borderWidth: borderWidth, color: textColor, fontSize: fontSize }, prevChars.map((v, idx) => (React__default.createElement(CharacterComponent, { key: `split-flap-${idx}`, background: background, borderWidth: borderWidth, characterWidth: characterWidth, prevValue: v === ' ' ? '\\u2007' : v, step: step, textColor: textColor, value: currChars[idx] === ' ' ? '\\u2007' : currChars[idx], withSound: withSound })))));\r\n};\n\nexport { ALPHA, NUMERIC, PUNCTUATION, SplitFlapDisplay as default };\n","import React from 'react';\n\ntype CodeBlockProps = {\n  background: string;\n  borderColor: string;\n  borderWidth: string;\n  characterSet: string;\n  characterWidth: string;\n  fontSize: string;\n  minLength: number;\n  padDirection: string;\n  step: number;\n  textColor: string;\n  value: string;\n  withSound: string;\n};\n\nconst CodeBlock: React.FC<CodeBlockProps> = ({\n  background,\n  borderColor,\n  borderWidth,\n  characterSet,\n  characterWidth,\n  fontSize,\n  minLength,\n  padDirection,\n  step,\n  textColor,\n  value,\n  withSound,\n}) => (\n  <pre>\n    {`\n  <SplitFlapDisplay\n    background='${background}'\n    borderColor='${borderColor}'\n    borderWidth='${borderWidth}'\n    characterSet={${characterSet}}\n    characterWidth='${characterWidth}'\n    fontSize='${fontSize}'\n    minLength={${minLength}}\n    padDirection='${padDirection}'\n    step={${step}}\n    textColor='${textColor}'\n    value='${value}'\n    withSound={${withSound}}\n  />\n  `}\n  </pre>\n);\n\nexport default CodeBlock;\n","import React, { useState } from 'react';\nimport { SketchPicker, ColorChangeHandler } from 'react-color';\n\ntype SwatchProps = {\n  color: string;\n  onChange: ColorChangeHandler;\n};\n\nconst Swatch: React.FC<SwatchProps> = ({ color, onChange }) => {\n  const [showColorPicker, setShowColorPicker] = useState<boolean>(false);\n\n  return (\n    <div className=\"swatch-container\">\n      <div className=\"swatch\" onClick={() => setShowColorPicker(!showColorPicker)}>\n        <div className=\"color\" style={{ background: color }} />\n      </div>\n      {showColorPicker && (\n        <div className=\"popover\">\n          <div className=\"cover\" onClick={() => setShowColorPicker(false)} />\n          <SketchPicker color={color} onChange={onChange} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Swatch;\n","import React from 'react';\n\nconst Wrapper: React.FC = ({ children }) => <div className=\"wrapper\">{children}</div>;\n\nexport default Wrapper;\n","export interface defaultInputs {\n  numeric: string;\n  alpha: string;\n  alphanumeric: string;\n  punctuation: string;\n}\n\nexport const defaultInputs = {\n  numeric: '94103',\n  alpha: 'TRENTON',\n  alphanumeric: '1 FERRY BUILDING',\n  punctuation: 'TRE-SEA: DELAYED!',\n};\n","import React, { useState, ChangeEvent, SetStateAction } from 'react';\nimport { ColorChangeHandler } from 'react-color';\nimport SplitFlapDisplay, { ALPHA, NUMERIC, PUNCTUATION } from './ReactSplitFlapDisplay';\n\nimport CodeBlock from './CodeBlock';\nimport Swatch from './Swatch';\nimport Wrapper from './Wrapper';\nimport { defaultInputs } from './constants';\n\ntype DefaultInputKeys = keyof defaultInputs;\n\nconst typeToCharSetArray = {\n  numeric: NUMERIC,\n  alpha: ALPHA,\n  alphanumeric: [...ALPHA, ...NUMERIC],\n  punctuation: [...ALPHA, ...PUNCTUATION],\n};\n\nconst typeToCharSet = {\n  numeric: 'NUMERIC',\n  alpha: 'ALPHA',\n  alphanumeric: '[...ALPHA, ...NUMERIC]',\n  punctuation: '[...ALPHA, ...PUNCTUATION]',\n};\n\nconst App: React.FC<Record<string, never>> = () => {\n  const [exampleSet, setExampleSet] = useState<DefaultInputKeys>('numeric');\n  const [background, setBackground] = useState<string>('#000000');\n  const [borderColor, setBorderColor] = useState<string>('#dddddd');\n  const [borderWidth, setBorderWidth] = useState<string>('1px');\n  const [characterWidth, setCharacterWidth] = useState<string>('1em');\n  const [fontSize, setFontSize] = useState<string>('2em');\n  const [minLength, setMinLength] = useState<number>(defaultInputs.numeric.length);\n  const [padDirection, setPadDirection] = useState<string>('left');\n  const [value, setValue] = useState<string>(defaultInputs.numeric);\n  const [textColor, setTextColor] = useState<string>('#dddddd');\n  const [step, setStep] = useState<number>(200);\n  const [withSound, setWithSound] = useState<boolean | string>(false);\n  const [withCustomSound, setWithCustomSound] = useState<string>('');\n\n  const generateInputHandler =\n    (setFn: SetStateAction<any>) =>\n    (event: ChangeEvent<HTMLInputElement>): void =>\n      setFn(event.target.value);\n  const generateColorInputHandler =\n    (setFn: SetStateAction<any>): ColorChangeHandler =>\n    (color): void =>\n      setFn(color.hex);\n  const onWithSoundToggle = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value === 'false') {\n      setWithSound(false);\n    }\n    if (event.target.value === 'true') {\n      setWithSound(true);\n    }\n    if (event.target.value === 'custom') {\n      setWithSound(withCustomSound);\n    }\n  };\n  const onCustomSoundInput = (event: ChangeEvent<HTMLInputElement>) => {\n    if (typeof withSound === 'string') {\n      setWithSound(event.target.value);\n    }\n    setWithCustomSound(event.target.value);\n  };\n\n  const onSelect = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const selectedExample = event.target.value as DefaultInputKeys;\n    if (selectedExample !== exampleSet) {\n      const newValue = defaultInputs[selectedExample];\n      setExampleSet(selectedExample);\n      setValue(newValue);\n      setMinLength(newValue.length);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h3>React Split Flap Display</h3>\n      <div className=\"flex-container-vertical\">\n        <Wrapper>\n          <SplitFlapDisplay\n            background={background}\n            borderColor={borderColor}\n            borderWidth={borderWidth}\n            characterSet={typeToCharSetArray[exampleSet]}\n            characterWidth={characterWidth}\n            fontSize={fontSize}\n            minLength={minLength}\n            padDirection={padDirection}\n            step={step}\n            textColor={textColor}\n            value={value}\n            withSound={withSound}\n          />\n        </Wrapper>\n        <div className=\"flex-container-horizontal\">\n          <div>\n            <Wrapper>\n              <div>\n                <label>\n                  display:&nbsp;\n                  <input value={value} onChange={generateInputHandler(setValue)} />\n                </label>\n              </div>\n              <div>\n                character set:&nbsp;\n                <select value={exampleSet} onChange={onSelect}>\n                  <option value=\"numeric\">0-9</option>\n                  <option value=\"alpha\">A-Z</option>\n                  <option value=\"alphanumeric\">A-Z with 0-9</option>\n                  <option value=\"punctuation\">A-Z with punctuation</option>\n                </select>\n              </div>\n              <div>\n                character width:&nbsp;\n                <input value={characterWidth} onChange={generateInputHandler(setCharacterWidth)} />\n              </div>\n              <div>\n                <label>\n                  min length:&nbsp;\n                  <input type=\"number\" value={minLength} onChange={generateInputHandler(setMinLength)} />\n                </label>\n              </div>\n              <div>\n                <label>\n                  pad direction:&nbsp;\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"left\"\n                      onChange={generateInputHandler(setPadDirection)}\n                      checked={padDirection === 'left'}\n                    />\n                    left\n                  </label>\n                  &nbsp;\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"right\"\n                      onChange={generateInputHandler(setPadDirection)}\n                      checked={padDirection === 'right'}\n                    />\n                    right\n                  </label>\n                </label>\n              </div>\n              <div>\n                <label>\n                  step (ms):&nbsp;\n                  <input type=\"number\" value={step} onChange={generateInputHandler(setStep)} />\n                </label>\n              </div>\n            </Wrapper>\n            <Wrapper>\n              <div>\n                background color:&nbsp;\n                <Swatch color={background} onChange={generateColorInputHandler(setBackground)} />\n              </div>\n              <div>\n                border color:&nbsp;\n                <Swatch color={borderColor} onChange={generateColorInputHandler(setBorderColor)} />\n              </div>\n              <div>\n                text color:&nbsp;\n                <Swatch color={textColor} onChange={generateColorInputHandler(setTextColor)} />\n              </div>\n            </Wrapper>\n            <Wrapper>\n              <div>\n                border width:&nbsp;\n                <input value={borderWidth} onChange={generateInputHandler(setBorderWidth)} />\n              </div>\n              <div>\n                font size:&nbsp;\n                <input value={fontSize} onChange={generateInputHandler(setFontSize)} />\n              </div>\n            </Wrapper>\n            <Wrapper>\n              <div>\n                <label>\n                  with sound:&nbsp;\n                  <label>\n                    <input type=\"radio\" value=\"false\" onChange={onWithSoundToggle} checked={withSound === false} />\n                    no sound\n                  </label>\n                  &nbsp;\n                  <label>\n                    <input type=\"radio\" value=\"true\" onChange={onWithSoundToggle} checked={withSound === true} />\n                    default sound\n                  </label>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"custom\"\n                      onChange={onWithSoundToggle}\n                      checked={typeof withSound === 'string'}\n                    />\n                    custom sound source\n                  </label>\n                </label>\n                &nbsp;\n                {typeof withSound === 'string' && <input value={withCustomSound} onChange={onCustomSoundInput} />}\n              </div>\n            </Wrapper>\n          </div>\n          <CodeBlock\n            // withSound={withSound}\n            background={background}\n            borderColor={borderColor}\n            borderWidth={borderWidth}\n            characterSet={typeToCharSet[exampleSet]}\n            characterWidth={characterWidth}\n            fontSize={fontSize}\n            minLength={minLength}\n            padDirection={padDirection}\n            step={step}\n            textColor={textColor}\n            value={value}\n            withSound={JSON.stringify(withSound)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}